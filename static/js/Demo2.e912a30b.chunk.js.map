{"version":3,"sources":["components/Table/TableStyle.js","components/Table/Table.js","features/Demo2/Bar.js","features/Demo2/Demo2.js","features/Demo2/index.js"],"names":["TableBox","styled","div","SmallSrcollBar","COMMON_COLOR","GRAY","WHITE","TableCell","td","props","width","align","alignSwitch","columnHeaderFreeze","showGutter","SORTORDER","Table","columns","dataSource","setDataSource","onRow","editMode","useState","data","setData","columnData","setColumnData","sortInfo","setSortInfo","handleClickCell","e","onCell","rowInfo","rowIndex","stopPropagation","allTr","document","querySelectorAll","i","length","classList","remove","allTd","currentTarget","toggle","row","getElementById","getCellClassName","item","result","className","push","children","sortable","join","handleColumnSort","column","index","handleFindItem","infoList","prev","order","newOrder","splice","getSortIcon","dataIndex","obj","key","value","list","method","R","getTableCell","id","editable","name","onChange","val","rowId","updated","map","no","handleCellChange","rowData","placeholder","handleColumnExpand","updatedColumn","orginItem","showChildren","useEffect","conditions","sorted","JSON","stringify","titleAlign","title","onClick","child","record","dataInd","handleRowClick","highlight","render","COLORS","Div","BarComponent","chartXOpt","chartGroupOpt","size","setSize","xAxisData","setxAxisData","barGroup","setBarGroup","chartWrapper","useRef","filter","includes","current","clientWidth","height","clientHeight","margin","top","bottom","left","right","isMulti","hasSearchBar","options","ref","ResponsiveContainer","BarChart","XAxis","dataKey","tickSize","tickMargin","YAxis","Tooltip","cursor","fill","labelStyle","fontSize","fontWeight","contentStyle","borderRadius","wrapperStyle","border","boxShadow","Legend","Bar","columnWidth","comma","Math","round","compose","connect","state","isMdxOpen","setIsMdxOpen","mdxCode","setMdxCode","setChartOpt","setChartGroupOpt","setEditMode","getTableByMdx","HomeResource","MDX","replace","then","response","Axes","Tuples","Members","label","Attributes","AccountName","Name","reduce","curr","Time","accountName","group","getCells","Cells","newList","Value","catch","error","ID","handleModalClick","status","console","log","isOpen","toggleClose","onSave","readOnly","Demo2"],"mappings":"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","file":"static/js/Demo2.e912a30b.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { SmallSrcollBar } from '~~styles/_commonStyle';\nimport { COMMON_COLOR } from '~~styles/_variables';\nimport { respondSmallerThan } from '~~styles/_variables';\n\nconst TableBox = styled.div`\n  ${SmallSrcollBar(2)}\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border: 1px solid ${COMMON_COLOR.GRAY};\n  font-size: 12px;\n  max-height: 500px;\n\n  table{\n    table-layout: fixed;\n    /* border-collapse: collapse; */\n    border-collapse: separate;\n    border-spacing: 0;\n    border-width: 0px;\n    width: 100%;\n    border-color: ${COMMON_COLOR.GRAY};\n  }\n\n  .tableHeadZone{\n    overflow-x: auto;\n    padding: 0 3px 0 0;\n    border-bottom: 1px solid ${COMMON_COLOR.GRAY};\n    background: #eeeeee;\n    position: sticky;\n    top: 0;\n    z-index: 3;\n    tr{\n      .tableCell{\n        background: #eeeeee;\n        border-bottom-width: 1px;\n        &.sortable{\n          cursor: pointer;\n        }\n        .iconSort{\n          font-size: 14px;\n          margin: 0 0 0 2px;\n          transition: .4s ease;\n        }\n        .iconExpand{\n          margin: 0 4px 0 0;\n          transition: .4s ease;\n        }\n        .iconSort:active, .iconExpand:active{\n          transform: scale(0.9);\n        }\n      }\n    }\n    ::-webkit-scrollbar {\n      &:horizontal{ display: none }\n    }\n  }\n\n  .tableBodyZone{\n    tr{\n      &:not(:last-child){\n        border-bottom: 1px solid ${COMMON_COLOR.GRAY};\n        .tableCell{\n          border-bottom-width: 1px;\n        }\n      }\n      &.focus{\n        .tableCell{\n          background: #cecece !important;\n        }\n      }\n      .tableCell{\n        background: ${COMMON_COLOR.WHITE};\n        &.focus{\n          box-shadow: inset 0px 0px 0px 1px #004fc4;\n        }\n      }\n    }\n  }\n\n  .emptyTable{\n    display: flex;\n    justify-content: center;\n    margin: 8% 0;\n    font-size: 1rem;\n    font-weight: 500;\n  }\n\n`;\n\nconst TableCell = styled.td`\n  padding: 5px;\n  width: ${props => props.width || 'auto'};\n  letter-spacing: 0;\n  text-align: ${props => props.align || 'center'};\n  >div{\n    display: flex;\n    align-items: center;\n    justify-content: ${props=>alignSwitch(props.align)};\n    >span{\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n  }\n  &:first-child{\n    position: ${props=>(props.columnHeaderFreeze || props.showGutter)? 'sticky' : 'unset'};\n    z-index: 1;\n    left: 0;\n  }\n  &:nth-child(2){\n    position: ${props=>(props.columnHeaderFreeze && props.showGutter)? 'sticky' : 'unset'};\n    z-index: 1;\n    left: 32px;\n  }\n  &:not(:last-child){\n    border-right: 1px solid ${COMMON_COLOR.GRAY};\n  }\n  &.hasChildren{\n    background: #eeeeee !important;\n  }\n\n  .cellInput{\n    width: 100%;\n    padding: 0 4px;\n    border: none;\n    background: #f4f4f4;\n    border-radius: 0;\n    .functionBtn{\n      display: none;\n    }\n    .valueBox{\n      text-align: ${props => props.align || 'center'};\n      text-overflow: unset;\n    }\n  }\n`;\n\nfunction alignSwitch(align){\n  switch(align){\n    case 'left':\n      return 'flex-start'\n    case 'right':\n      return 'flex-end'\n    default:\n      return 'center'\n  }\n}\n\nexport {\n  TableBox,\n  TableCell,\n}","import React, { useEffect, useState } from 'react';\nimport { IoMdArrowDropdown, IoMdArrowDropup } from \"react-icons/io\";\nimport { AiFillMinusSquare, AiFillPlusSquare } from \"react-icons/ai\";\nimport { TableCell } from './TableStyle';\nimport { Input } from '~~components/Fields';\nimport * as R from 'ramda'\n\nconst SORTORDER = {\n  DESC: 'descend',\n  ASC: 'ascend'\n}\n\nconst Table = (props) => {\n  const { \n    columnHeaderFreeze = false,\n    showGutter = false,\n    columns = [], \n    dataSource = [], \n    setDataSource = () =>{},\n    onRow = () => {},\n    editMode = false,\n  } = props;\n  const [ data, setData ] = useState(dataSource);\n  const [ columnData, setColumnData ]= useState(columns);\n  const [ sortInfo, setSortInfo] = useState([]);\n\n  useEffect(()=>{\n    setData(dataSource)\n  }, [dataSource])\n\n  useEffect(()=>{\n    if(sortInfo.length===0) {\n      setData(dataSource)\n      return \n    }\n\n    const conditions = sortInfo.map(item=>(R[item.order](R.prop(item.column))))\n    const sorted = R.sortWith(conditions)(dataSource)\n    setData(sorted)\n  }, [JSON.stringify(sortInfo)])\n\n  useEffect(()=>{\n    const allTd = document.querySelectorAll(\"td\");\n    for(let i=0; i<allTd.length; i++){ \n      allTd[i].classList.remove('focus');\n    }\n  }, [editMode])\n\n  function handleRowClick(e, record) {\n    e.stopPropagation();\n    onRow(record);\n  }\n\n  function handleClickCell(e, onCell = () =>{}, rowInfo, columnInfo, rowIndex) {\n    e.stopPropagation();\n    onCell(rowInfo);\n  \n    const allTr = document.querySelectorAll(\"tr\");\n    for(let i=0; i<allTr.length; i++){ \n      allTr[i].classList.remove('focus');\n    }\n    const allTd = document.querySelectorAll(\"td\");\n    for(let i=0; i<allTd.length; i++){ \n      allTd[i].classList.remove('focus');\n    }\n\n    // focus cell\n    if(!editMode){\n      e.currentTarget.classList.toggle('focus');\n    }\n    // focus row\n    const row = document.getElementById(`table-row--${rowIndex}`)\n    row.classList.toggle('focus');\n  }\n\n  function getCellClassName(item) {\n    let result = ['tableCell'];\n    if (item.className) {\n      result.push(item.className);\n    }\n    if (item.children?.length > 0) {\n      result.push('hasChildren');\n    }\n    if (item.sortable) {\n      result.push('sortable');\n    }\n\n    return result.join(' ');\n  }\n\n  function handleColumnSort(column){\n    const index = handleFindItem('column', column, sortInfo, 'findIndex')\n    let infoList = [...sortInfo]\n\n    if(index === -1){\n      setSortInfo(prev=>([...prev, { column, order:SORTORDER.DESC }]))\n    }else{\n      let newOrder \n      switch(sortInfo[index].order){\n        case '':\n          newOrder = SORTORDER.DESC\n          infoList[index] = { column, order: newOrder }\n          break;\n        case SORTORDER.DESC:\n          newOrder = SORTORDER.ASC\n          infoList[index] = { column, order: newOrder }\n          break;\n        case SORTORDER.ASC:\n          newOrder = '';\n          infoList.splice(index, 1)\n          break;\n        default:\n          break;\n      }\n      setSortInfo(infoList)\n    }\n  }\n\n  function getSortIcon(dataIndex){\n    const obj = handleFindItem('column', dataIndex, sortInfo, 'find')\n    if(!obj) return \n\n    switch(obj.order){\n      case SORTORDER.DESC:\n        return <IoMdArrowDropdown className='iconSort' />\n      case SORTORDER.ASC:\n        return <IoMdArrowDropup className='iconSort' />\n      default:\n        return\n    }\n  }\n\n  function handleFindItem(key, value, list, method){\n    return R[method](R.propEq(key, value))(list)\n  }\n\n  function getTableCell(item, index, key, props){\n    // console.log('getTableCell' , item)\n    return(\n      <TableCell\n        key={`table-${key}--${item.dataIndex}--${index + 1}`}\n        id={`table-${key}--${index + 1}`}\n        className={getCellClassName(item)}\n        width={item.width}\n        align={item.align}\n        columnHeaderFreeze={columnHeaderFreeze}\n        showGutter={showGutter}\n        {...props}\n      >\n        {\n          (editMode && props.editable)?\n          <Input \n            name={item.dataIndex}\n            value={props.value}\n            onChange={(val) => handleCellChange(val, props.rowData.no)}\n            placeholder=''\n            className='cellInput'\n          />\n          \n          : \n          props.children\n        }\n      </TableCell>\n    )\n  }\n\n  function handleCellChange(val, rowId){\n    const updated = data.map(item=>{\n      if(item.no === rowId){\n        return{\n          ...item,\n          ...val\n        }\n      }\n      return item\n    })\n    setDataSource(updated)\n  }\n\n  function handleColumnExpand(e, key){\n    e.stopPropagation();\n    const index =  handleFindItem('dataIndex', key, columnData, 'findIndex')\n    let updatedColumn = [...columnData]\n    const orginItem = [...columnData][index]\n    // 更新showChildren\n    updatedColumn[index] = {...orginItem, showChildren: !orginItem.showChildren}\n    setColumnData(updatedColumn)\n  }\n\n  return (\n    <>\n      {data.length > 0 ?\n        <table>\n          <thead className=\"tableHeadZone\" >\n            <tr>\n              {\n                showGutter && \n                getTableCell(showGutter, 0, 'header', {\n                  align: showGutter.titleAlign ? showGutter.titleAlign : showGutter.align,\n                  children: <>{showGutter.title} </>\n                })\n              }\n              {columnData.map((item, index) => (\n                <>\n                  {\n                    getTableCell(item, showGutter? index+1 : index, 'header', {\n                      align: item.titleAlign ? item.titleAlign : item.align,\n                      children:(\n                        <div>\n                          {item?.children?.length>0 && \n                            (item.showChildren? \n                              <AiFillMinusSquare className='iconExpand' onClick={(e)=>handleColumnExpand(e, item.dataIndex)} /> \n                            : <AiFillPlusSquare className='iconExpand'  onClick={(e)=>handleColumnExpand(e, item.dataIndex)} /> )\n                          }\n                          <span onClick={()=> (item.sortable? handleColumnSort(item.dataIndex) : {})}>{item.title}</span>\n                          {item.sortable && getSortIcon(item.dataIndex)}\n                        </div>\n                      )\n                    })\n                  }\n                  {\n                    item.showChildren && \n                    (item.children.map((child)=>(\n                      getTableCell(child, showGutter? index+1 : index, 'header', {\n                        align: child.titleAlign ? child.titleAlign : child.align,\n                        children:(\n                          <div>\n                            <span onClick={()=> (child.sortable? handleColumnSort(child.dataIndex) : {})}>{child.title}</span>\n                            {child.sortable && getSortIcon(child.dataIndex)}\n                          </div>\n                        )\n                      })\n                    )))\n                  }\n                </>\n              ))}\n            </tr>\n          </thead>\n          <tbody className=\"tableBodyZone\">\n            {data.map((record, dataInd) => {\n              return (\n                <tr key={`table-row--${dataInd}`} id={`table-row--${dataInd}`} onClick={(e) => handleRowClick(e, record)} className={record.highlight ? 'highlight' : ''}>\n                  {\n                    showGutter && \n                    getTableCell(showGutter, 0, 'cell', { children: `${dataInd+1}` })\n                  }\n                  {columnData.map((item, index) => (\n                    <>\n                      {\n                        getTableCell(item, showGutter? index+1 : index, 'cell', {\n                          editable: item.editable,\n                          align: item.align,\n                          onClick: (e) => handleClickCell(e, item.onCell, record, item, dataInd),\n                          rowData: record,\n                          value: record[item.dataIndex],\n                          children: (\n                            <div>\n                              {item.render? \n                                item.render(record[item.dataIndex], record, dataInd)\n                              : record[item.dataIndex]}\n                            </div>\n                          )\n                        })\n                      }\n                      {\n                        item.showChildren && \n                        (item.children.map((child)=>(\n                          getTableCell(child, showGutter? index+1 : index, 'cell', {\n                            editable: child.editable,\n                            align: child.align,\n                            onClick: (e) => handleClickCell(e, item.onCell, record, child, dataInd),\n                            rowData: record,\n                            value: record[child.dataIndex],\n                            children: (\n                              <div>\n                                {child.render? \n                                  child.render(record[child.dataIndex], record, dataInd)\n                                : record[child.dataIndex]}\n                              </div>\n                            )\n                          })\n                        )))\n                      }\n                    </>\n                  ))}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table> : \n        <div className=\"emptyTable\">No Data</div>\n      }\n    </>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Select } from '~~components/Fields';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\n\nconst COLORS = [\n  '#6d86b2',\n  '#799d91',\n  '#9da17b',\n  '#e2ca88',\n  '#e3a8bb',\n  '#a396c7',\n  '#5ca6a9',\n  '#c96b6b',\n  '#a0876e',\n  '#799f91',\n  '#6e4f77',\n  '#507daf',\n  '#c1bd76',\n  '#ed8489',\n  '#74a5b5',\n  '#655244'\n]\n\nconst Div = styled.div`\n  margin: 20px 0 0;\n  width: 100%;\n  .wrapper{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 20px 0 10px;\n    width: 100%;\n  }\n  .clickOutsideBox {\n    max-width: calc((100% - 10px)/2);\n    &:not(:last-child){\n      margin: 0 10px 0 0\n    }\n    .selectWrapper{\n      min-width: 260px;\n      min-height: 46px;\n    }\n  }\n  .chartWrapper{\n    width: 100%;\n    height: 400px;\n    .recharts-default-legend{\n      font-size: 12px;\n      margin: 0 40px;\n      display: flex;\n      align-items: center;\n      flex-wrap: wrap;\n      justify-content: center;\n      .recharts-legend-item{\n        display: flex;\n        align-items: center;\n      }\n    }\n    .recharts-tooltip-wrapper{\n      &:focus{\n        outline: none;\n      }\n    }\n    text{\n      font-size: 12px;\n    }\n  }\n`;\n\nconst BarComponent = (props) => {\n  const {\n    dataSource,\n    chartXOpt,\n    chartGroupOpt,\n  } = props;\n  const [size, setSize] = useState({})\n  const [data, setData] = useState([])\n  const [xAxisData, setxAxisData] = useState([])\n  const [barGroup, setBarGroup] = useState([])\n  const chartWrapper = useRef()\n\n  useEffect(() => {\n    const list = dataSource.filter(item => xAxisData.includes(item.name))\n    setData(list)\n  }, [JSON.stringify(xAxisData), JSON.stringify(dataSource)])\n\n  useEffect(() => {\n    setxAxisData([\n      chartXOpt[0]?.value,\n      chartXOpt[1]?.value,\n      chartXOpt[2]?.value,\n      chartXOpt[3]?.value,\n      chartXOpt[4]?.value,\n      chartXOpt[5]?.value\n    ])\n    setBarGroup(['Q1-2004', 'Q2-2004', 'Q3-2004', 'Q4-2004'])\n  }, [JSON.stringify(chartXOpt), JSON.stringify(chartGroupOpt)])\n\n  useEffect(() => {\n    if (!chartWrapper.current) return;\n    setSize({\n      width: chartWrapper.current.clientWidth,\n      height: chartWrapper.current.clientHeight,\n      margin: { top: 25, bottom: 10, left: 20, right: 20 },\n    });\n  }, [chartWrapper, JSON.stringify(dataSource)])\n\n  return (\n    <Div>\n      <div className='wrapper'>\n        <Select\n          isMulti\n          name='xAxisData'\n          hasSearchBar\n          placeholder='AccountName'\n          value={xAxisData}\n          options={chartXOpt}\n          onChange={(item) => setxAxisData(item.xAxisData)}\n        />\n        <Select\n          isMulti\n          name='barGroup'\n          hasSearchBar\n          placeholder='Time'\n          value={barGroup}\n          options={chartGroupOpt}\n          onChange={(item) => setBarGroup(item.barGroup)}\n        />\n      </div>\n      <div className='chartWrapper' ref={chartWrapper}>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart\n            width={size.width}\n            height={size.height}\n            margin={size.margin}\n            data={data}\n          >\n            <XAxis\n              dataKey=\"accountName\"\n              tickSize={0}\n              tickMargin={10}\n            />\n            <YAxis\n              tickSize={0}\n              tickMargin={5}\n            />\n            <Tooltip\n              cursor={{ fill: '#eeeeee' }}\n              labelStyle={{ fontSize: '12px', fontWeight: 600, }}\n              contentStyle={{ fontSize: '12px', borderRadius: '6px' }}\n              wrapperStyle={{ border: 'none', boxShadow: 'none' }}\n            />\n            <Legend />\n            {\n              barGroup.map((item, index) => (\n                <Bar dataKey={item} fill={COLORS[index]} key={item} />\n              ))\n            }\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </Div>\n  );\n};\n\nexport default BarComponent;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport * as R from 'ramda';\nimport { BsCodeSlash, BsFillPencilFill } from \"react-icons/bs\";\nimport { HomeResource } from '~~apis/resource';\nimport { TableBox, Table } from '~~components/Table';\nimport { Button } from '~~components/Buttons';\nimport { MdxModal } from '~~components/Modals';\nimport { comma } from '~~utils/CommonUtils';\nimport BarChart from './Bar';\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 5% 6%;\n  .wrapper{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 0 0 15px;\n    min-height: 40px;\n    >div:not(:last-child){\n      margin: 0 10px 0 0\n    }\n  }\n`\n\nconst columnWidth = '6rem'\n\nconst columns = [\n  {\n    title: 'plan_chart_of_accounts',\n    dataIndex: 'accountName',\n    width: '10rem',\n    className: 'btnCell',\n    align: 'center',\n    titleAlign: 'center',\n    sortable: true,\n  },\n  {\n    title: 'Q1-2004',\n    dataIndex: 'Q1-2004',\n    width: columnWidth,\n    className: 'btnCell',\n    align: 'right',\n    sortable: true,\n    render: (value, record) => comma(Math.round(value)),\n    showChildren: true,\n    children: [\n      {\n        title: 'Jan-2004',\n        dataIndex: 'Jan-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        sortable: true,\n        editable: true,\n        render: (value, record) => comma(Math.round(value)),\n      },\n      {\n        title: 'Feb-2004',\n        dataIndex: 'Feb-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        sortable: true,\n        editable: true,\n        render: (value, record) => comma(Math.round(value)),\n      },\n      {\n        title: 'Mar-2004',\n        dataIndex: 'Mar-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        sortable: true,\n        editable: true,\n        render: (value, record) => comma(Math.round(value)),\n      },\n    ]\n  },\n  {\n    title: 'Q2-2004',\n    dataIndex: 'Q2-2004',\n    width: columnWidth,\n    className: 'btnCell',\n    align: 'right',\n    sortable: true,\n    render: (value, record) => comma(Math.round(value)),\n    showChildren: true,\n    children: [\n      {\n        title: 'Apr-2004',\n        dataIndex: 'Apr-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        editable: true,\n        render: (value, record) => comma(Math.round(value)),\n      },\n      {\n        title: 'May-2004',\n        dataIndex: 'May-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        editable: true,\n        render: (value, record) => comma(Math.round(value)),\n      },\n      {\n        title: 'Jun-2004',\n        dataIndex: 'Jun-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        editable: true,\n        render: (value, record) => comma(Math.round(value)),\n      },\n    ]\n  },\n  {\n    title: 'Q3-2004',\n    dataIndex: 'Q3-2004',\n    width: columnWidth,\n    className: 'btnCell',\n    align: 'right',\n    sortable: true,\n    render: (value, record) => comma(Math.round(value)),\n    showChildren: true,\n    children: [\n      {\n        title: 'Jul-2004',\n        dataIndex: 'Jul-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        editable: true,\n        render: (value, record) => comma(Math.round(value)),\n      },\n      {\n        title: 'Aug-2004',\n        dataIndex: 'Aug-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        editable: true,\n        render: (value, record) => comma(Math.round(value)),\n      },\n      {\n        title: 'Sep-2004',\n        dataIndex: 'Sep-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        editable: true,\n        render: (value, record) => comma(Math.round(value)),\n      },\n    ]\n  },\n  {\n    title: 'Q4-2004',\n    dataIndex: 'Q4-2004',\n    width: columnWidth,\n    className: 'btnCell',\n    align: 'right',\n    sortable: true,\n    render: (value, record) => comma(Math.round(value)),\n    showChildren: true,\n    children: [\n      {\n        title: 'Oct-2004',\n        dataIndex: 'Oct-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        editable: true,\n        render: (value, record) => comma(Math.round(value)),\n      },\n      {\n        title: 'Nov-2004',\n        dataIndex: 'Nov-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        editable: true,\n        render: (value, record) => comma(Math.round(value)),\n      },\n      {\n        title: 'Dec-2004',\n        dataIndex: 'Dec-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        editable: true,\n        render: (value, record) => comma(Math.round(value)),\n      },\n    ]\n  },\n\n]\n\nconst Demo2 = (props) => {\n  const [isMdxOpen, setIsMdxOpen] = useState(false)\n  const [mdxCode, setMdxCode] = useState(`SELECT\n  {TM1SubsetToSet([plan_time].[plan_time], \"plan_time_2004_qtrs_and_month\")}\n  PROPERTIES [plan_time].[plan_time].[Time]  ON COLUMNS, \n  TM1SubsetAll([plan_chart_of_accounts]) \n  PROPERTIES [plan_chart_of_accounts].[plan_chart_of_accounts].[AccountName]  ON ROWS \nFROM [plan_BudgetPlan] \nWHERE (\n  [plan_version].[plan_version].[FY 2004 Budget],\n  [plan_business_unit].[plan_business_unit].[10110],\n  [plan_department].[plan_department].[105],\n  [plan_exchange_rates].[plan_exchange_rates].[local],\n  [plan_source].[plan_source].[input]\n)`)\n  const [dataSource, setDataSource] = useState([])\n  const [chartXOpt, setChartOpt] = useState([])\n  const [chartGroupOpt, setChartGroupOpt] = useState([])\n  const [ editMode, setEditMode ] = useState(false)\n\n  // console.log('dataSource', dataSource)\n\n  useEffect(() => {\n    getTableByMdx(mdxCode)\n  }, [])\n\n  function getTableByMdx(data) {\n    HomeResource.getTableByMdx({ MDX: data.replace(/\\n/g, ' ') })\n      .then(response => {\n        // console.log('getTableByMdx response -----', response);\n        const { data } = response\n        let list = data.Axes[1].Tuples.map((item, index) => {\n          const key = item.Members[0]\n          //chartXOpt\n          setChartOpt(prev => ([...prev, { label: key.Attributes.AccountName, value: key.Name }]))\n          //dataSource item\n          const updatedItem =\n            data.Axes[0].Tuples.reduce((prev, curr) => {\n              const key = curr?.Members[0]\n              return {\n                ...prev,\n                [key?.Attributes?.Time]: ''\n              }\n            }, { accountName: key.Attributes.AccountName, name: key.Name, no: index + 1 })\n          return updatedItem\n        })\n\n        //chartGroup\n        const group = data.Axes[0].Tuples.map(item => ({ label: item.Members[0].Name, value: item.Members[0].Name }))\n        setChartGroupOpt(group)\n\n        setDataSource(list)\n        getCells(data.ID, list)\n      })\n      .catch(error => {\n        // console.log('getTableByMdx error -----', error.response);\n      });\n  }\n\n  function getCells(id, list) {\n    HomeResource.getCells(id)\n      .then(response => {\n        // console.log('getCells response -----', response);\n        const { data: { Cells } } = response\n        const newList = list.map((item, index) => {\n          const group = 15 * index\n          return {\n            ...item,\n            [columns[1].dataIndex]: Cells[group + item.no - 1].Value,\n            [columns[1].children[0].dataIndex]: Cells[group + item.no].Value,\n            [columns[1].children[1].dataIndex]: Cells[group + item.no + 1].Value,\n            [columns[1].children[2].dataIndex]: Cells[group + item.no + 2].Value,\n            [columns[2].dataIndex]: Cells[group + item.no + 3].Value,\n            [columns[2].children[0].dataIndex]: Cells[group + item.no + 4].Value,\n            [columns[2].children[1].dataIndex]: Cells[group + item.no + 5].Value,\n            [columns[2].children[2].dataIndex]: Cells[group + item.no + 6].Value,\n            [columns[3].dataIndex]: Cells[group + item.no + 7].Value,\n            [columns[3].children[0].dataIndex]: Cells[group + item.no + 8].Value,\n            [columns[3].children[1].dataIndex]: Cells[group + item.no + 9].Value,\n            [columns[3].children[2].dataIndex]: Cells[group + item.no + 10].Value,\n            [columns[4].dataIndex]: Cells[group + item.no + 11].Value,\n            [columns[4].children[0].dataIndex]: Cells[group + item.no + 12].Value,\n            [columns[4].children[1].dataIndex]: Cells[group + item.no + 13].Value,\n            [columns[4].children[2].dataIndex]: Cells[group + item.no + 14].Value,\n          }\n        })\n        setDataSource(newList)\n      })\n      .catch(error => {\n        // console.log('error -----', error.response);\n      });\n  }\n\n  function handleModalClick(status) {\n    setIsMdxOpen(status)\n  }\n\n  function handleMdxChange(val) {\n    setMdxCode(val)\n  }\n\n  function handleMdxModalSave() {\n    getTableByMdx(mdxCode)\n  }\n\n  function handleSave(){\n    console.log('SAVE :::::', dataSource)\n    setEditMode(false)\n  }\n\n  return (\n    <Div>\n      {\n        editMode? \n        <div className='wrapper'>\n          <Button onClick={handleSave}>\n            Save\n          </Button>\n          <Button onClick={() => setEditMode(false)}>\n            Cancel\n          </Button>\n        </div> :\n        <div className='wrapper'>\n          <Button onClick={() => setEditMode(true)}>\n            <BsFillPencilFill />\n          </Button>\n          <Button onClick={() => handleModalClick(true)}>\n            <BsCodeSlash />\n          </Button>\n        </div>\n      }\n     \n      <TableBox>\n        <Table\n          columns={columns}\n          dataSource={dataSource}\n          setDataSource={setDataSource}\n          columnHeaderFreeze\n          editMode={editMode}\n          showGutter={\n            {\n              title: '',\n              dataIndex: '',\n              width: '2rem',\n              className: 'gutterCell',\n              align: 'center',\n            }}\n        />\n      </TableBox>\n      <BarChart\n        dataSource={dataSource}\n        chartXOpt={chartXOpt}\n        chartGroupOpt={chartGroupOpt}\n      />\n      <MdxModal\n        isOpen={isMdxOpen}\n        toggleClose={() => handleModalClick(false)}\n        mdxCode={mdxCode}\n        onChange={handleMdxChange}\n        onSave={handleMdxModalSave}\n        readOnly\n      />\n    </Div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n});\n\nconst mapDispatchToProps = {\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(Demo2);\n","import Demo2 from './Demo2';\n\nexport default Demo2;\n"],"sourceRoot":""}