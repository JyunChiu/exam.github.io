{"version":3,"sources":["components/Table/TableStyle.js","components/Table/Table.js","features/Demo2/Bar.js","features/Demo2/Demo2.js","features/Demo2/index.js"],"names":["TableBox","styled","div","SmallSrcollBar","COMMON_COLOR","GRAY","WHITE","TableCell","td","props","width","align","alignSwitch","columnHeaderFreeze","showGutter","SORTORDER","Table","columns","dataSource","onRow","useState","data","setData","columnData","setColumnData","sortInfo","setSortInfo","getCellClassName","item","result","className","push","children","length","sortable","join","handleColumnSort","column","index","handleFindItem","infoList","prev","order","newOrder","splice","getSortIcon","dataIndex","obj","key","value","list","method","R","getTableCell","id","handleColumnExpand","e","stopPropagation","updatedColumn","orginItem","showChildren","useEffect","conditions","map","sorted","JSON","stringify","titleAlign","title","onClick","child","record","dataInd","handleRowClick","highlight","onCell","handleClickCell","render","COLORS","Div","BarComponent","chartXOpt","chartGroupOpt","size","setSize","xAxisData","setxAxisData","barGroup","setBarGroup","chartWrapper","useRef","filter","includes","name","current","clientWidth","height","clientHeight","margin","top","bottom","left","right","isMulti","hasSearchBar","placeholder","options","onChange","ref","ResponsiveContainer","BarChart","XAxis","dataKey","tickSize","tickMargin","YAxis","Tooltip","cursor","fill","labelStyle","fontSize","fontWeight","contentStyle","borderRadius","wrapperStyle","border","boxShadow","Legend","Bar","columnWidth","comma","Math","round","compose","connect","state","isMdxOpen","setIsMdxOpen","mdxCode","setMdxCode","setDataSource","setChartOpt","setChartGroupOpt","getTableByMdx","HomeResource","MDX","replace","then","response","Axes","Tuples","Members","label","Attributes","AccountName","Name","reduce","curr","Time","accountName","no","group","getCells","Cells","newList","Value","catch","error","ID","handleModalClick","status","isOpen","toggleClose","val","onSave","readOnly","Demo2"],"mappings":"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","file":"static/js/Demo2.2760bac4.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { SmallSrcollBar } from '~~styles/_commonStyle';\nimport { COMMON_COLOR } from '~~styles/_variables';\nimport { respondSmallerThan } from '~~styles/_variables';\n\nconst TableBox = styled.div`\n  ${SmallSrcollBar(2)}\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border: 1px solid ${COMMON_COLOR.GRAY};\n  font-size: 12px;\n  max-height: 500px;\n\n  table{\n    table-layout: fixed;\n    /* border-collapse: collapse; */\n    border-collapse: separate;\n    border-spacing: 0;\n    border-width: 0px;\n    width: 100%;\n    border-color: ${COMMON_COLOR.GRAY};\n  }\n\n  .tableHeadZone{\n    overflow-x: auto;\n    padding: 0 3px 0 0;\n    border-bottom: 1px solid ${COMMON_COLOR.GRAY};\n    background: #eeeeee;\n    position: sticky;\n    top: 0;\n    z-index: 3;\n    tr{\n      .tableCell{\n        background: #eeeeee;\n        border-bottom-width: 1px;\n        &.sortable{\n          cursor: pointer;\n        }\n        .iconSort{\n          font-size: 14px;\n          margin: 0 0 0 2px;\n          transition: .4s ease;\n        }\n        .iconExpand{\n          margin: 0 4px 0 0;\n          transition: .4s ease;\n        }\n        .iconSort:active, .iconExpand:active{\n          transform: scale(0.9);\n        }\n      }\n    }\n    ::-webkit-scrollbar {\n      &:horizontal{ display: none }\n    }\n  }\n\n  .tableBodyZone{\n    tr{\n      &:not(:last-child){\n        border-bottom: 1px solid ${COMMON_COLOR.GRAY};\n        .tableCell{\n          border-bottom-width: 1px;\n        }\n      }\n      .tableCell{\n        background: ${COMMON_COLOR.WHITE};\n      }\n    }\n  }\n\n  .emptyTable{\n    display: flex;\n    justify-content: center;\n    margin: 8% 0;\n    font-size: 1rem;\n    font-weight: 500;\n  }\n\n`;\n\nconst TableCell = styled.td`\n  padding: 5px;\n  width: ${props => props.width || 'auto'};\n  letter-spacing: 0;\n  text-align: ${props => props.align || 'center'};\n  >div{\n    display: flex;\n    align-items: center;\n    justify-content: ${props=>alignSwitch( props.align)};\n    >span{\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n  }\n  &:first-child{\n    position: ${props=>(props.columnHeaderFreeze || props.showGutter)? 'sticky' : 'unset'};\n    z-index: 1;\n    left: 0;\n  }\n  &:nth-child(2){\n    position: ${props=>(props.columnHeaderFreeze && props.showGutter)? 'sticky' : 'unset'};\n    z-index: 1;\n    left: 32px;\n  }\n  &:not(:last-child){\n    border-right: 1px solid ${COMMON_COLOR.GRAY};\n  }\n  \n  &.hasChildren{\n    background: #eeeeee !important;\n  }\n`;\n\nfunction alignSwitch(align){\n  switch(align){\n    case 'left':\n      return 'flex-start'\n    case 'right':\n      return 'flex-end'\n    default:\n      return 'center'\n  }\n}\n\nexport {\n  TableBox,\n  TableCell,\n}","import React, { useEffect, useState } from 'react';\nimport { IoMdArrowDropdown, IoMdArrowDropup } from \"react-icons/io\";\nimport { AiFillMinusSquare, AiFillPlusSquare } from \"react-icons/ai\";\nimport { TableCell } from './TableStyle';\nimport * as R from 'ramda'\n\nconst SORTORDER = {\n  DESC: 'descend',\n  ASC: 'ascend'\n}\n\nconst Table = (props) => {\n  const { \n    columnHeaderFreeze = false,\n    showGutter = false,\n    columns = [], \n    dataSource = [], \n    onRow = () => {},\n  } = props;\n  const [ data, setData ] = useState(dataSource);\n  const [ columnData, setColumnData ]= useState(columns);\n  const [ sortInfo, setSortInfo] = useState([]);\n\n  useEffect(()=>{\n    setData(dataSource)\n  }, [dataSource])\n\n  useEffect(()=>{\n    if(sortInfo.length===0) {\n      setData(dataSource)\n      return \n    }\n\n    const conditions = sortInfo.map(item=>(R[item.order](R.prop(item.column))))\n    const sorted = R.sortWith(conditions)(dataSource)\n    setData(sorted)\n  }, [JSON.stringify(sortInfo)])\n\n  function handleRowClick(e, record) {\n    e.stopPropagation();\n    onRow(record);\n  }\n\n  function handleClickCell(e, onCell, record) {\n    e.stopPropagation();\n    onCell(record);\n    // console.log('??', e.detail)\n  }\n\n  function getCellClassName(item) {\n    let result = ['tableCell'];\n    if (item.className) {\n      result.push(item.className);\n    }\n    if (item.children?.length > 0) {\n      result.push('hasChildren');\n    }\n    if (item.sortable) {\n      result.push('sortable');\n    }\n\n    return result.join(' ');\n  }\n\n\n  function handleColumnSort(column){\n    const index = handleFindItem('column', column, sortInfo, 'findIndex')\n    let infoList = [...sortInfo]\n\n    if(index === -1){\n      setSortInfo(prev=>([...prev, { column, order:SORTORDER.DESC }]))\n    }else{\n      let newOrder \n      switch(sortInfo[index].order){\n        case '':\n          newOrder = SORTORDER.DESC\n          infoList[index] = { column, order: newOrder }\n          break;\n        case SORTORDER.DESC:\n          newOrder = SORTORDER.ASC\n          infoList[index] = { column, order: newOrder }\n          break;\n        case SORTORDER.ASC:\n          newOrder = '';\n          infoList.splice(index, 1)\n          break;\n        default:\n          break;\n      }\n      setSortInfo(infoList)\n    }\n  }\n\n  function getSortIcon(dataIndex){\n    const obj = handleFindItem('column', dataIndex, sortInfo, 'find')\n    if(!obj) return \n\n    switch(obj.order){\n      case SORTORDER.DESC:\n        return <IoMdArrowDropdown className='iconSort' />\n      case SORTORDER.ASC:\n        return <IoMdArrowDropup className='iconSort' />\n      default:\n        return\n    }\n  }\n\n  function handleFindItem(key, value, list, method){\n    return R[method](R.propEq(key, value))(list)\n  }\n\n  function getTableCell(item, index, key, props){\n    return(\n      <TableCell\n        key={`table-${key}--${item.dataIndex}--${index + 1}`}\n        id={`table-${key}--${index + 1}`}\n        className={getCellClassName(item)}\n        width={item.width}\n        align={item.align}\n        columnHeaderFreeze={columnHeaderFreeze}\n        showGutter={showGutter}\n        {...props}\n      >\n       {props.children}\n      </TableCell>\n    )\n  }\n\n  function handleColumnExpand(e, key){\n    e.stopPropagation();\n    const index =  handleFindItem('dataIndex', key, columnData, 'findIndex')\n    let updatedColumn = [...columnData]\n    const orginItem = [...columnData][index]\n    // 更新showChildren\n    updatedColumn[index] = {...orginItem, showChildren: !orginItem.showChildren}\n    setColumnData(updatedColumn)\n  }\n\n  return (\n    <>\n      {data.length > 0 ?\n        <table>\n          <thead className=\"tableHeadZone\" >\n            <tr>\n              {\n                showGutter && \n                getTableCell(showGutter, 0, 'header', {\n                  align: showGutter.titleAlign ? showGutter.titleAlign : showGutter.align,\n                  children: <>{showGutter.title} </>\n                })\n              }\n              {columnData.map((item, index) => (\n                <>\n                  {\n                    getTableCell(item, showGutter? index+1 : index, 'header', {\n                      align: item.titleAlign ? item.titleAlign : item.align,\n                      children:(\n                        <div>\n                          {item?.children?.length>0 && \n                            (item.showChildren? \n                              <AiFillMinusSquare className='iconExpand' onClick={(e)=>handleColumnExpand(e, item.dataIndex)} /> \n                            : <AiFillPlusSquare className='iconExpand'  onClick={(e)=>handleColumnExpand(e, item.dataIndex)} /> )\n                          }\n                          <span onClick={()=> (item.sortable? handleColumnSort(item.dataIndex) : {})}>{item.title}</span>\n                          {item.sortable && getSortIcon(item.dataIndex)}\n                        </div>\n                      )\n                    })\n                  }\n                  {\n                    item.showChildren && \n                    (item.children.map((child)=>(\n                      getTableCell(child, showGutter? index+1 : index, 'header', {\n                        align: child.titleAlign ? child.titleAlign : child.align,\n                        children:(\n                          <div>\n                            <span onClick={()=> (child.sortable? handleColumnSort(child.dataIndex) : {})}>{child.title}</span>\n                            {child.sortable && getSortIcon(child.dataIndex)}\n                          </div>\n                        )\n                      })\n                    )))\n                  }\n                </>\n              ))}\n            </tr>\n          </thead>\n          <tbody className=\"tableBodyZone\">\n            {data.map((record, dataInd) => {\n              return (\n                <tr key={`table-row--${dataInd}`} id={`table-row--${dataInd}`} onClick={(e) => handleRowClick(e, record)} className={record.highlight ? 'highlight' : ''}>\n                  {\n                    showGutter && \n                    getTableCell(showGutter, 0, 'cell', {\n                      children: `${dataInd+1}`\n                    })\n                  }\n                  {columnData.map((item, index) => (\n                    <>\n                      {\n                        getTableCell(item, showGutter? index+1 : index, 'cell', {\n                          align: item.titleAlign ? item.titleAlign : item.align,\n                          onClick: item.onCell ? (e) => handleClickCell(e, item.onCell, record) : () => {},\n                          children: (\n                            <div>\n                              {item.render? \n                                item.render(record[item.dataIndex], record, dataInd)\n                              : record[item.dataIndex]}\n                            </div>\n                          )\n                        })\n                      }\n                      {\n                        item.showChildren && \n                        (item.children.map((child)=>(\n                          getTableCell(child, showGutter? index+1 : index, 'cell', {\n                            align: child.titleAlign ? child.titleAlign : child.align,\n                            children: (\n                              <div>\n                                {child.render? \n                                  child.render(record[child.dataIndex], record, dataInd)\n                                : record[child.dataIndex]}\n                              </div>\n                            )\n                          })\n                        )))\n                      }\n                    </>\n                  ))}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table> : \n        <div className=\"emptyTable\">No Data</div>\n      }\n    </>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport * as R from 'ramda';\nimport _groupBy from 'lodash/groupBy'\nimport { Select } from '~~components/Fields';\nimport {\n  BarChart,\n  Bar,\n  Label,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\n\nimport { COMMON_COLOR } from '~~styles/_variables';\nimport { IoMdHeartEmpty } from 'react-icons/io';\n\nconst COLORS = [\n  '#6d86b2',\n  '#799d91',\n  '#9da17b',\n  '#e2ca88',\n  '#e3a8bb',\n  '#a396c7',\n  '#5ca6a9',\n  '#c96b6b',\n  '#a0876e',\n  '#799f91',\n  '#6e4f77',\n  '#507daf',\n  '#c1bd76',\n  '#ed8489',\n  '#74a5b5',\n  '#655244'\n]\n\nconst Div = styled.div`\n  margin: 20px 0 0;\n  width: 100%;\n  .wrapper{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 20px 0 10px;\n    width: 100%;\n  }\n  .clickOutsideBox {\n    max-width: calc((100% - 10px)/2);\n    &:not(:last-child){\n      margin: 0 10px 0 0\n    }\n    .selectWrapper{\n      min-width: 260px;\n      min-height: 44px;\n    }\n  }\n  .chartWrapper{\n    width: 100%;\n    height: 400px;\n    .recharts-default-legend{\n      font-size: 12px;\n      margin: 0 40px;\n      display: flex;\n      align-items: center;\n      flex-wrap: wrap;\n      justify-content: center;\n      .recharts-legend-item{\n        display: flex;\n        align-items: center;\n      }\n    }\n    .recharts-tooltip-wrapper{\n      &:focus{\n        outline: none;\n      }\n    }\n    text{\n      font-size: 12px;\n    }\n  }\n`;\n\nconst BarComponent = (props) => {\n  const {\n    dataSource,\n    chartXOpt,\n    chartGroupOpt,\n  } = props;\n  const [size, setSize] = useState({})\n  const [data, setData] = useState([])\n  const [xAxisData, setxAxisData] = useState([])\n  const [barGroup, setBarGroup] = useState([])\n  const chartWrapper = useRef()\n\n  useEffect(() => {\n    const list = dataSource.filter(item => xAxisData.includes(item.name))\n    setData(list)\n  }, [JSON.stringify(xAxisData), JSON.stringify(dataSource)])\n\n  useEffect(() => {\n    setxAxisData([\n      chartXOpt[0]?.value,\n      chartXOpt[1]?.value,\n      chartXOpt[2]?.value,\n      chartXOpt[3]?.value,\n      chartXOpt[4]?.value,\n      chartXOpt[5]?.value\n    ])\n    setBarGroup(['Q1-2004', 'Q2-2004', 'Q3-2004', 'Q4-2004'])\n  }, [JSON.stringify(chartXOpt), JSON.stringify(chartGroupOpt)])\n\n  useEffect(() => {\n    if (!chartWrapper.current) return;\n    setSize({\n      width: chartWrapper.current.clientWidth,\n      height: chartWrapper.current.clientHeight,\n      margin: { top: 25, bottom: 10, left: 20, right: 20 },\n    });\n  }, [chartWrapper, JSON.stringify(dataSource)])\n\n  return (\n    <Div>\n      <div className='wrapper'>\n        <Select\n          isMulti\n          name='xAxisData'\n          hasSearchBar\n          placeholder='AccountName'\n          value={xAxisData}\n          options={chartXOpt}\n          onChange={(item) => setxAxisData(item.xAxisData)}\n        />\n        <Select\n          isMulti\n          name='barGroup'\n          hasSearchBar\n          placeholder='Time'\n          value={barGroup}\n          options={chartGroupOpt}\n          onChange={(item) => setBarGroup(item.barGroup)}\n        />\n      </div>\n      <div className='chartWrapper' ref={chartWrapper}>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart\n            width={size.width}\n            height={size.height}\n            margin={size.margin}\n            data={data}\n          >\n            <XAxis\n              dataKey=\"accountName\"\n              tickSize={0}\n              tickMargin={10}\n            />\n            <YAxis\n              tickSize={0}\n              tickMargin={5}\n            />\n            <Tooltip\n              cursor={{ fill: '#eeeeee' }}\n              labelStyle={{ fontSize: '12px', fontWeight: 600, }}\n              contentStyle={{ fontSize: '12px', borderRadius: '6px' }}\n              wrapperStyle={{ border: 'none', boxShadow: 'none' }}\n            />\n            <Legend />\n            {\n              barGroup.map((item, index) => (\n                <Bar dataKey={item} fill={COLORS[index]} key={item} />\n              ))\n            }\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </Div>\n  );\n};\n\nexport default BarComponent;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport * as R from 'ramda';\nimport { BsCodeSlash } from \"react-icons/bs\";\nimport { HomeResource } from '~~apis/resource';\nimport { TableBox, Table } from '~~components/Table';\nimport { Button } from '~~components/Buttons';\nimport { MdxModal } from '~~components/Modals';\nimport { comma } from '~~utils/CommonUtils';\nimport BarChart from './Bar';\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 5%;\n  .btnCode{\n    margin: 0 0 20px;\n  }\n`\n\nconst columnWidth = '6rem'\n\nconst columns = [\n  {\n    title: 'plan_chart_of_accounts',\n    dataIndex: 'accountName',\n    width: '10rem',\n    className: 'btnCell',\n    align: 'left',\n    titleAlign: 'center',\n    sortable: true,\n    // render: (value, record) => <span>{value}</span>,\n  },\n  {\n    title: 'Q1-2004',\n    dataIndex: 'Q1-2004',\n    width: columnWidth,\n    className: 'btnCell',\n    align: 'right',\n    sortable: true,\n    render: (value, record) => comma(Math.round(value)),\n    showChildren: true,\n    children: [\n      {\n        title: 'Jan-2004',\n        dataIndex: 'Jan-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        sortable: true,\n        render: (value, record) => comma(Math.round(value)),\n      },\n      {\n        title: 'Feb-2004',\n        dataIndex: 'Feb-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        sortable: true,\n        render: (value, record) => comma(Math.round(value)),\n      },\n      {\n        title: 'Mar-2004',\n        dataIndex: 'Mar-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        sortable: true,\n        render: (value, record) => comma(Math.round(value)),\n      },\n    ]\n  },\n  {\n    title: 'Q2-2004',\n    dataIndex: 'Q2-2004',\n    width: columnWidth,\n    className: 'btnCell',\n    align: 'right',\n    sortable: true,\n    render: (value, record) => comma(Math.round(value)),\n    showChildren: true,\n    children: [\n      {\n        title: 'Apr-2004',\n        dataIndex: 'Apr-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        render: (value, record) => comma(Math.round(value)),\n      },\n      {\n        title: 'May-2004',\n        dataIndex: 'May-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        render: (value, record) => comma(Math.round(value)),\n      },\n      {\n        title: 'Jun-2004',\n        dataIndex: 'Jun-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        render: (value, record) => comma(Math.round(value)),\n      },\n    ]\n  },\n  {\n    title: 'Q3-2004',\n    dataIndex: 'Q3-2004',\n    width: columnWidth,\n    className: 'btnCell',\n    align: 'right',\n    sortable: true,\n    render: (value, record) => comma(Math.round(value)),\n    showChildren: true,\n    children: [\n      {\n        title: 'Jul-2004',\n        dataIndex: 'Jul-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        render: (value, record) => comma(Math.round(value)),\n      },\n      {\n        title: 'Aug-2004',\n        dataIndex: 'Aug-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        render: (value, record) => comma(Math.round(value)),\n      },\n      {\n        title: 'Sep-2004',\n        dataIndex: 'Sep-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        render: (value, record) => comma(Math.round(value)),\n      },\n    ]\n  },\n  {\n    title: 'Q4-2004',\n    dataIndex: 'Q4-2004',\n    width: columnWidth,\n    className: 'btnCell',\n    align: 'right',\n    sortable: true,\n    render: (value, record) => comma(Math.round(value)),\n    showChildren: true,\n    children: [\n      {\n        title: 'Oct-2004',\n        dataIndex: 'Oct-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        render: (value, record) => comma(Math.round(value)),\n      },\n      {\n        title: 'Nov-2004',\n        dataIndex: 'Nov-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        render: (value, record) => comma(Math.round(value)),\n      },\n      {\n        title: 'Dec-2004',\n        dataIndex: 'Dec-2004',\n        width: columnWidth,\n        className: 'btnCell',\n        align: 'right',\n        render: (value, record) => comma(Math.round(value)),\n      },\n    ]\n  },\n\n]\n\nconst Demo2 = (props) => {\n  const [isMdxOpen, setIsMdxOpen] = useState(false)\n  const [mdxCode, setMdxCode] = useState(`SELECT\n  {TM1SubsetToSet([plan_time].[plan_time], \"plan_time_2004_qtrs_and_month\")}\n  PROPERTIES [plan_time].[plan_time].[Time]  ON COLUMNS, \n  TM1SubsetAll([plan_chart_of_accounts]) \n  PROPERTIES [plan_chart_of_accounts].[plan_chart_of_accounts].[AccountName]  ON ROWS \nFROM [plan_BudgetPlan] \nWHERE (\n  [plan_version].[plan_version].[FY 2004 Budget],\n  [plan_business_unit].[plan_business_unit].[10110],\n  [plan_department].[plan_department].[105],\n  [plan_exchange_rates].[plan_exchange_rates].[local],\n  [plan_source].[plan_source].[input]\n)`)\n  const [dataSource, setDataSource] = useState([])\n  const [chartXOpt, setChartOpt] = useState([])\n  const [chartGroupOpt, setChartGroupOpt] = useState([])\n\n  // console.log('dataSource', dataSource)\n\n  useEffect(() => {\n    getTableByMdx(mdxCode)\n  }, [])\n\n  function getTableByMdx(data) {\n    HomeResource.getTableByMdx({ MDX: data.replace(/\\n/g, ' ') })\n      .then(response => {\n        // console.log('getTableByMdx response -----', response);\n        const { data } = response\n        let list = data.Axes[1].Tuples.map((item, index) => {\n          const key = item.Members[0]\n          //chartXOpt\n          setChartOpt(prev => ([...prev, { label: key.Attributes.AccountName, value: key.Name }]))\n          //dataSource item\n          const updatedItem =\n            data.Axes[0].Tuples.reduce((prev, curr) => {\n              const key = curr?.Members[0]\n              return {\n                ...prev,\n                [key?.Attributes?.Time]: ''\n              }\n            }, { accountName: key.Attributes.AccountName, name: key.Name, no: index + 1 })\n          return updatedItem\n        })\n\n        //chartGroup\n        const group = data.Axes[0].Tuples.map(item => ({ label: item.Members[0].Name, value: item.Members[0].Name }))\n        setChartGroupOpt(group)\n\n        setDataSource(list)\n        getCells(data.ID, list)\n      })\n      .catch(error => {\n        // console.log('getTableByMdx error -----', error.response);\n      });\n  }\n\n  function getCells(id, list) {\n    HomeResource.getCells(id)\n      .then(response => {\n        // console.log('getCells response -----', response);\n        const { data: { Cells } } = response\n        const newList = list.map((item, index) => {\n          const group = 15 * index\n          return {\n            ...item,\n            [columns[1].dataIndex]: Cells[group + item.no - 1].Value,\n            [columns[1].children[0].dataIndex]: Cells[group + item.no].Value,\n            [columns[1].children[1].dataIndex]: Cells[group + item.no + 1].Value,\n            [columns[1].children[2].dataIndex]: Cells[group + item.no + 2].Value,\n            [columns[2].dataIndex]: Cells[group + item.no + 3].Value,\n            [columns[2].children[0].dataIndex]: Cells[group + item.no + 4].Value,\n            [columns[2].children[1].dataIndex]: Cells[group + item.no + 5].Value,\n            [columns[2].children[2].dataIndex]: Cells[group + item.no + 6].Value,\n            [columns[3].dataIndex]: Cells[group + item.no + 7].Value,\n            [columns[3].children[0].dataIndex]: Cells[group + item.no + 8].Value,\n            [columns[3].children[1].dataIndex]: Cells[group + item.no + 9].Value,\n            [columns[3].children[2].dataIndex]: Cells[group + item.no + 10].Value,\n            [columns[4].dataIndex]: Cells[group + item.no + 11].Value,\n            [columns[4].children[0].dataIndex]: Cells[group + item.no + 12].Value,\n            [columns[4].children[1].dataIndex]: Cells[group + item.no + 13].Value,\n            [columns[4].children[2].dataIndex]: Cells[group + item.no + 14].Value,\n          }\n        })\n        setDataSource(newList)\n      })\n      .catch(error => {\n        // console.log('error -----', error.response);\n      });\n  }\n\n  function handleModalClick(status) {\n    setIsMdxOpen(status)\n  }\n\n  function handleMdxChange(val) {\n    setMdxCode(val)\n  }\n\n  function handleMdxModalSave() {\n    getTableByMdx(mdxCode)\n  }\n\n  return (\n    <Div>\n      <Button\n        onClick={() => handleModalClick(true)}\n        className='btnCode'\n      >\n        <BsCodeSlash />\n      </Button>\n      <TableBox>\n        <Table\n          columns={columns}\n          dataSource={dataSource}\n          columnHeaderFreeze\n          showGutter={\n            {\n              title: '',\n              dataIndex: '',\n              width: '2rem',\n              className: 'gutterCell',\n              align: 'center',\n            }}\n        />\n      </TableBox>\n      <BarChart\n        dataSource={dataSource}\n        chartXOpt={chartXOpt}\n        chartGroupOpt={chartGroupOpt}\n      />\n      <MdxModal\n        isOpen={isMdxOpen}\n        toggleClose={() => handleModalClick(false)}\n        mdxCode={mdxCode}\n        onChange={handleMdxChange}\n        onSave={handleMdxModalSave}\n        readOnly\n      />\n    </Div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n});\n\nconst mapDispatchToProps = {\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(Demo2);\n","import Demo2 from './Demo2';\n\nexport default Demo2;\n"],"sourceRoot":""}